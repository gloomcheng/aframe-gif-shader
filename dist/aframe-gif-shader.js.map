{"version":3,"file":"aframe-gif-shader.js","mappings":"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","sources":["webpack://AFRAME_GIF/webpack/universalModuleDefinition","webpack://AFRAME_GIF/./node_modules/js-binary-schema-parser/lib/index.js","webpack://AFRAME_GIF/./node_modules/gifuct-js/lib/deinterlace.js","webpack://AFRAME_GIF/./node_modules/gifuct-js/lib/lzw.js","webpack://AFRAME_GIF/./node_modules/gifuct-js/lib/index.js","webpack://AFRAME_GIF/./node_modules/js-binary-schema-parser/lib/parsers/uint8.js","webpack://AFRAME_GIF/./node_modules/js-binary-schema-parser/lib/schemas/gif.js","webpack://AFRAME_GIF/webpack/bootstrap","webpack://AFRAME_GIF/./src/gif-loader.ts","webpack://AFRAME_GIF/./src/utils.ts","webpack://AFRAME_GIF/./src/index.ts","webpack://AFRAME_GIF/./src/shader.ts","webpack://AFRAME_GIF/./src/component.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AFRAME_GIF\"] = factory();\n\telse\n\t\troot[\"AFRAME_GIF\"] = factory();\n})(this, () => {\nreturn ","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loop = exports.conditional = exports.parse = void 0;\n\nvar parse = function parse(stream, schema) {\n  var result = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var parent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : result;\n\n  if (Array.isArray(schema)) {\n    schema.forEach(function (partSchema) {\n      return parse(stream, partSchema, result, parent);\n    });\n  } else if (typeof schema === 'function') {\n    schema(stream, result, parent, parse);\n  } else {\n    var key = Object.keys(schema)[0];\n\n    if (Array.isArray(schema[key])) {\n      parent[key] = {};\n      parse(stream, schema[key], result, parent[key]);\n    } else {\n      parent[key] = schema[key](stream, result, parent, parse);\n    }\n  }\n\n  return result;\n};\n\nexports.parse = parse;\n\nvar conditional = function conditional(schema, conditionFunc) {\n  return function (stream, result, parent, parse) {\n    if (conditionFunc(stream, result, parent)) {\n      parse(stream, schema, result, parent);\n    }\n  };\n};\n\nexports.conditional = conditional;\n\nvar loop = function loop(schema, continueFunc) {\n  return function (stream, result, parent, parse) {\n    var arr = [];\n    var lastStreamPos = stream.pos;\n\n    while (continueFunc(stream, result, parent)) {\n      var newParent = {};\n      parse(stream, schema, result, newParent); // cases when whole file is parsed but no termination is there and stream position is not getting updated as well\n      // it falls into infinite recursion, null check to avoid the same\n\n      if (stream.pos === lastStreamPos) {\n        break;\n      }\n\n      lastStreamPos = stream.pos;\n      arr.push(newParent);\n    }\n\n    return arr;\n  };\n};\n\nexports.loop = loop;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deinterlace = void 0;\n\n/**\r\n * Deinterlace function from https://github.com/shachaf/jsgif\r\n */\nvar deinterlace = function deinterlace(pixels, width) {\n  var newPixels = new Array(pixels.length);\n  var rows = pixels.length / width;\n\n  var cpRow = function cpRow(toRow, fromRow) {\n    var fromPixels = pixels.slice(fromRow * width, (fromRow + 1) * width);\n    newPixels.splice.apply(newPixels, [toRow * width, width].concat(fromPixels));\n  }; // See appendix E.\n\n\n  var offsets = [0, 4, 2, 1];\n  var steps = [8, 8, 4, 2];\n  var fromRow = 0;\n\n  for (var pass = 0; pass < 4; pass++) {\n    for (var toRow = offsets[pass]; toRow < rows; toRow += steps[pass]) {\n      cpRow(toRow, fromRow);\n      fromRow++;\n    }\n  }\n\n  return newPixels;\n};\n\nexports.deinterlace = deinterlace;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.lzw = void 0;\n\n/**\r\n * javascript port of java LZW decompression\r\n * Original java author url: https://gist.github.com/devunwired/4479231\r\n */\nvar lzw = function lzw(minCodeSize, data, pixelCount) {\n  var MAX_STACK_SIZE = 4096;\n  var nullCode = -1;\n  var npix = pixelCount;\n  var available, clear, code_mask, code_size, end_of_information, in_code, old_code, bits, code, i, datum, data_size, first, top, bi, pi;\n  var dstPixels = new Array(pixelCount);\n  var prefix = new Array(MAX_STACK_SIZE);\n  var suffix = new Array(MAX_STACK_SIZE);\n  var pixelStack = new Array(MAX_STACK_SIZE + 1); // Initialize GIF data stream decoder.\n\n  data_size = minCodeSize;\n  clear = 1 << data_size;\n  end_of_information = clear + 1;\n  available = clear + 2;\n  old_code = nullCode;\n  code_size = data_size + 1;\n  code_mask = (1 << code_size) - 1;\n\n  for (code = 0; code < clear; code++) {\n    prefix[code] = 0;\n    suffix[code] = code;\n  } // Decode GIF pixel stream.\n\n\n  var datum, bits, count, first, top, pi, bi;\n  datum = bits = count = first = top = pi = bi = 0;\n\n  for (i = 0; i < npix;) {\n    if (top === 0) {\n      if (bits < code_size) {\n        // get the next byte\n        datum += data[bi] << bits;\n        bits += 8;\n        bi++;\n        continue;\n      } // Get the next code.\n\n\n      code = datum & code_mask;\n      datum >>= code_size;\n      bits -= code_size; // Interpret the code\n\n      if (code > available || code == end_of_information) {\n        break;\n      }\n\n      if (code == clear) {\n        // Reset decoder.\n        code_size = data_size + 1;\n        code_mask = (1 << code_size) - 1;\n        available = clear + 2;\n        old_code = nullCode;\n        continue;\n      }\n\n      if (old_code == nullCode) {\n        pixelStack[top++] = suffix[code];\n        old_code = code;\n        first = code;\n        continue;\n      }\n\n      in_code = code;\n\n      if (code == available) {\n        pixelStack[top++] = first;\n        code = old_code;\n      }\n\n      while (code > clear) {\n        pixelStack[top++] = suffix[code];\n        code = prefix[code];\n      }\n\n      first = suffix[code] & 0xff;\n      pixelStack[top++] = first; // add a new string to the table, but only if space is available\n      // if not, just continue with current table until a clear code is found\n      // (deferred clear code implementation as per GIF spec)\n\n      if (available < MAX_STACK_SIZE) {\n        prefix[available] = old_code;\n        suffix[available] = first;\n        available++;\n\n        if ((available & code_mask) === 0 && available < MAX_STACK_SIZE) {\n          code_size++;\n          code_mask += available;\n        }\n      }\n\n      old_code = in_code;\n    } // Pop a pixel off the pixel stack.\n\n\n    top--;\n    dstPixels[pi++] = pixelStack[top];\n    i++;\n  }\n\n  for (i = pi; i < npix; i++) {\n    dstPixels[i] = 0; // clear missing pixels\n  }\n\n  return dstPixels;\n};\n\nexports.lzw = lzw;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decompressFrames = exports.decompressFrame = exports.parseGIF = void 0;\n\nvar _gif = _interopRequireDefault(require(\"js-binary-schema-parser/lib/schemas/gif\"));\n\nvar _jsBinarySchemaParser = require(\"js-binary-schema-parser\");\n\nvar _uint = require(\"js-binary-schema-parser/lib/parsers/uint8\");\n\nvar _deinterlace = require(\"./deinterlace\");\n\nvar _lzw = require(\"./lzw\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar parseGIF = function parseGIF(arrayBuffer) {\n  var byteData = new Uint8Array(arrayBuffer);\n  return (0, _jsBinarySchemaParser.parse)((0, _uint.buildStream)(byteData), _gif[\"default\"]);\n};\n\nexports.parseGIF = parseGIF;\n\nvar generatePatch = function generatePatch(image) {\n  var totalPixels = image.pixels.length;\n  var patchData = new Uint8ClampedArray(totalPixels * 4);\n\n  for (var i = 0; i < totalPixels; i++) {\n    var pos = i * 4;\n    var colorIndex = image.pixels[i];\n    var color = image.colorTable[colorIndex] || [0, 0, 0];\n    patchData[pos] = color[0];\n    patchData[pos + 1] = color[1];\n    patchData[pos + 2] = color[2];\n    patchData[pos + 3] = colorIndex !== image.transparentIndex ? 255 : 0;\n  }\n\n  return patchData;\n};\n\nvar decompressFrame = function decompressFrame(frame, gct, buildImagePatch) {\n  if (!frame.image) {\n    console.warn('gif frame does not have associated image.');\n    return;\n  }\n\n  var image = frame.image; // get the number of pixels\n\n  var totalPixels = image.descriptor.width * image.descriptor.height; // do lzw decompression\n\n  var pixels = (0, _lzw.lzw)(image.data.minCodeSize, image.data.blocks, totalPixels); // deal with interlacing if necessary\n\n  if (image.descriptor.lct.interlaced) {\n    pixels = (0, _deinterlace.deinterlace)(pixels, image.descriptor.width);\n  }\n\n  var resultImage = {\n    pixels: pixels,\n    dims: {\n      top: frame.image.descriptor.top,\n      left: frame.image.descriptor.left,\n      width: frame.image.descriptor.width,\n      height: frame.image.descriptor.height\n    }\n  }; // color table\n\n  if (image.descriptor.lct && image.descriptor.lct.exists) {\n    resultImage.colorTable = image.lct;\n  } else {\n    resultImage.colorTable = gct;\n  } // add per frame relevant gce information\n\n\n  if (frame.gce) {\n    resultImage.delay = (frame.gce.delay || 10) * 10; // convert to ms\n\n    resultImage.disposalType = frame.gce.extras.disposal; // transparency\n\n    if (frame.gce.extras.transparentColorGiven) {\n      resultImage.transparentIndex = frame.gce.transparentColorIndex;\n    }\n  } // create canvas usable imagedata if desired\n\n\n  if (buildImagePatch) {\n    resultImage.patch = generatePatch(resultImage);\n  }\n\n  return resultImage;\n};\n\nexports.decompressFrame = decompressFrame;\n\nvar decompressFrames = function decompressFrames(parsedGif, buildImagePatches) {\n  return parsedGif.frames.filter(function (f) {\n    return f.image;\n  }).map(function (f) {\n    return decompressFrame(f, parsedGif.gct, buildImagePatches);\n  });\n};\n\nexports.decompressFrames = decompressFrames;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.readBits = exports.readArray = exports.readUnsigned = exports.readString = exports.peekBytes = exports.readBytes = exports.peekByte = exports.readByte = exports.buildStream = void 0;\n\n// Default stream and parsers for Uint8TypedArray data type\nvar buildStream = function buildStream(uint8Data) {\n  return {\n    data: uint8Data,\n    pos: 0\n  };\n};\n\nexports.buildStream = buildStream;\n\nvar readByte = function readByte() {\n  return function (stream) {\n    return stream.data[stream.pos++];\n  };\n};\n\nexports.readByte = readByte;\n\nvar peekByte = function peekByte() {\n  var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return function (stream) {\n    return stream.data[stream.pos + offset];\n  };\n};\n\nexports.peekByte = peekByte;\n\nvar readBytes = function readBytes(length) {\n  return function (stream) {\n    return stream.data.subarray(stream.pos, stream.pos += length);\n  };\n};\n\nexports.readBytes = readBytes;\n\nvar peekBytes = function peekBytes(length) {\n  return function (stream) {\n    return stream.data.subarray(stream.pos, stream.pos + length);\n  };\n};\n\nexports.peekBytes = peekBytes;\n\nvar readString = function readString(length) {\n  return function (stream) {\n    return Array.from(readBytes(length)(stream)).map(function (value) {\n      return String.fromCharCode(value);\n    }).join('');\n  };\n};\n\nexports.readString = readString;\n\nvar readUnsigned = function readUnsigned(littleEndian) {\n  return function (stream) {\n    var bytes = readBytes(2)(stream);\n    return littleEndian ? (bytes[1] << 8) + bytes[0] : (bytes[0] << 8) + bytes[1];\n  };\n};\n\nexports.readUnsigned = readUnsigned;\n\nvar readArray = function readArray(byteSize, totalOrFunc) {\n  return function (stream, result, parent) {\n    var total = typeof totalOrFunc === 'function' ? totalOrFunc(stream, result, parent) : totalOrFunc;\n    var parser = readBytes(byteSize);\n    var arr = new Array(total);\n\n    for (var i = 0; i < total; i++) {\n      arr[i] = parser(stream);\n    }\n\n    return arr;\n  };\n};\n\nexports.readArray = readArray;\n\nvar subBitsTotal = function subBitsTotal(bits, startIndex, length) {\n  var result = 0;\n\n  for (var i = 0; i < length; i++) {\n    result += bits[startIndex + i] && Math.pow(2, length - i - 1);\n  }\n\n  return result;\n};\n\nvar readBits = function readBits(schema) {\n  return function (stream) {\n    var _byte = readByte()(stream); // convert the byte to bit array\n\n\n    var bits = new Array(8);\n\n    for (var i = 0; i < 8; i++) {\n      bits[7 - i] = !!(_byte & 1 << i);\n    } // convert the bit array to values based on the schema\n\n\n    return Object.keys(schema).reduce(function (res, key) {\n      var def = schema[key];\n\n      if (def.length) {\n        res[key] = subBitsTotal(bits, def.index, def.length);\n      } else {\n        res[key] = bits[def.index];\n      }\n\n      return res;\n    }, {});\n  };\n};\n\nexports.readBits = readBits;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _ = require(\"../\");\n\nvar _uint = require(\"../parsers/uint8\");\n\n// a set of 0x00 terminated subblocks\nvar subBlocksSchema = {\n  blocks: function blocks(stream) {\n    var terminator = 0x00;\n    var chunks = [];\n    var streamSize = stream.data.length;\n    var total = 0;\n\n    for (var size = (0, _uint.readByte)()(stream); size !== terminator; size = (0, _uint.readByte)()(stream)) {\n      // size becomes undefined for some case when file is corrupted and  terminator is not proper \n      // null check to avoid recursion\n      if (!size) break; // catch corrupted files with no terminator\n\n      if (stream.pos + size >= streamSize) {\n        var availableSize = streamSize - stream.pos;\n        chunks.push((0, _uint.readBytes)(availableSize)(stream));\n        total += availableSize;\n        break;\n      }\n\n      chunks.push((0, _uint.readBytes)(size)(stream));\n      total += size;\n    }\n\n    var result = new Uint8Array(total);\n    var offset = 0;\n\n    for (var i = 0; i < chunks.length; i++) {\n      result.set(chunks[i], offset);\n      offset += chunks[i].length;\n    }\n\n    return result;\n  }\n}; // global control extension\n\nvar gceSchema = (0, _.conditional)({\n  gce: [{\n    codes: (0, _uint.readBytes)(2)\n  }, {\n    byteSize: (0, _uint.readByte)()\n  }, {\n    extras: (0, _uint.readBits)({\n      future: {\n        index: 0,\n        length: 3\n      },\n      disposal: {\n        index: 3,\n        length: 3\n      },\n      userInput: {\n        index: 6\n      },\n      transparentColorGiven: {\n        index: 7\n      }\n    })\n  }, {\n    delay: (0, _uint.readUnsigned)(true)\n  }, {\n    transparentColorIndex: (0, _uint.readByte)()\n  }, {\n    terminator: (0, _uint.readByte)()\n  }]\n}, function (stream) {\n  var codes = (0, _uint.peekBytes)(2)(stream);\n  return codes[0] === 0x21 && codes[1] === 0xf9;\n}); // image pipeline block\n\nvar imageSchema = (0, _.conditional)({\n  image: [{\n    code: (0, _uint.readByte)()\n  }, {\n    descriptor: [{\n      left: (0, _uint.readUnsigned)(true)\n    }, {\n      top: (0, _uint.readUnsigned)(true)\n    }, {\n      width: (0, _uint.readUnsigned)(true)\n    }, {\n      height: (0, _uint.readUnsigned)(true)\n    }, {\n      lct: (0, _uint.readBits)({\n        exists: {\n          index: 0\n        },\n        interlaced: {\n          index: 1\n        },\n        sort: {\n          index: 2\n        },\n        future: {\n          index: 3,\n          length: 2\n        },\n        size: {\n          index: 5,\n          length: 3\n        }\n      })\n    }]\n  }, (0, _.conditional)({\n    lct: (0, _uint.readArray)(3, function (stream, result, parent) {\n      return Math.pow(2, parent.descriptor.lct.size + 1);\n    })\n  }, function (stream, result, parent) {\n    return parent.descriptor.lct.exists;\n  }), {\n    data: [{\n      minCodeSize: (0, _uint.readByte)()\n    }, subBlocksSchema]\n  }]\n}, function (stream) {\n  return (0, _uint.peekByte)()(stream) === 0x2c;\n}); // plain text block\n\nvar textSchema = (0, _.conditional)({\n  text: [{\n    codes: (0, _uint.readBytes)(2)\n  }, {\n    blockSize: (0, _uint.readByte)()\n  }, {\n    preData: function preData(stream, result, parent) {\n      return (0, _uint.readBytes)(parent.text.blockSize)(stream);\n    }\n  }, subBlocksSchema]\n}, function (stream) {\n  var codes = (0, _uint.peekBytes)(2)(stream);\n  return codes[0] === 0x21 && codes[1] === 0x01;\n}); // application block\n\nvar applicationSchema = (0, _.conditional)({\n  application: [{\n    codes: (0, _uint.readBytes)(2)\n  }, {\n    blockSize: (0, _uint.readByte)()\n  }, {\n    id: function id(stream, result, parent) {\n      return (0, _uint.readString)(parent.blockSize)(stream);\n    }\n  }, subBlocksSchema]\n}, function (stream) {\n  var codes = (0, _uint.peekBytes)(2)(stream);\n  return codes[0] === 0x21 && codes[1] === 0xff;\n}); // comment block\n\nvar commentSchema = (0, _.conditional)({\n  comment: [{\n    codes: (0, _uint.readBytes)(2)\n  }, subBlocksSchema]\n}, function (stream) {\n  var codes = (0, _uint.peekBytes)(2)(stream);\n  return codes[0] === 0x21 && codes[1] === 0xfe;\n});\nvar schema = [{\n  header: [{\n    signature: (0, _uint.readString)(3)\n  }, {\n    version: (0, _uint.readString)(3)\n  }]\n}, {\n  lsd: [{\n    width: (0, _uint.readUnsigned)(true)\n  }, {\n    height: (0, _uint.readUnsigned)(true)\n  }, {\n    gct: (0, _uint.readBits)({\n      exists: {\n        index: 0\n      },\n      resolution: {\n        index: 1,\n        length: 3\n      },\n      sort: {\n        index: 4\n      },\n      size: {\n        index: 5,\n        length: 3\n      }\n    })\n  }, {\n    backgroundColorIndex: (0, _uint.readByte)()\n  }, {\n    pixelAspectRatio: (0, _uint.readByte)()\n  }]\n}, (0, _.conditional)({\n  gct: (0, _uint.readArray)(3, function (stream, result) {\n    return Math.pow(2, result.lsd.gct.size + 1);\n  })\n}, function (stream, result) {\n  return result.lsd.gct.exists;\n}), // content frames\n{\n  frames: (0, _.loop)([gceSchema, applicationSchema, commentSchema, imageSchema, textSchema], function (stream) {\n    var nextCode = (0, _uint.peekByte)()(stream); // rather than check for a terminator, we should check for the existence\n    // of an ext or image block to avoid infinite loops\n    //var terminator = 0x3B;\n    //return nextCode !== terminator;\n\n    return nextCode === 0x21 || nextCode === 0x2c;\n  })\n}];\nvar _default = schema;\nexports[\"default\"] = _default;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * GIF loading and parsing utilities using gifuct-js\n * @see {@link https://github.com/matt-way/gifuct-js} gifuct-js Documentation\n */\nimport { parseGIF, decompressFrames } from \"gifuct-js\";\n/**\n * Utility class for loading and parsing GIF files\n */\nexport class GifLoader {\n    /**\n     * Parse GIF file buffer into ParsedGif structure\n     * @param buffer - Raw GIF file buffer\n     * @returns Parsed GIF data structure\n     */\n    static parseGIF(buffer) {\n        return parseGIF(buffer);\n    }\n    /**\n     * Decompress GIF frames from parsed GIF data\n     * @param gif - Parsed GIF data\n     * @returns Array of decompressed GIF frames\n     */\n    static decompressFrames(gif) {\n        return decompressFrames(gif, true);\n    }\n}\n","/**\n * Utility functions for A-Frame GIF Shader\n */\n/**\n * Resolves various types of URLs and selectors to their final URL form\n * Handles:\n * - DOM element selectors (e.g., #gifImage)\n * - url() CSS function syntax\n * - Relative paths\n * - Absolute URLs\n *\n * @param src - Source URL or selector\n * @returns Resolved URL string\n */\nexport function resolveUrl(src) {\n    if (!src)\n        return \"\";\n    // Check if it's a selector (e.g., #gifImage)\n    if (src.startsWith(\"#\")) {\n        const el = document.querySelector(src);\n        if (el) {\n            if (el instanceof HTMLImageElement && el.src) {\n                return el.src;\n            }\n            else if (el instanceof HTMLCanvasElement) {\n                return el.toDataURL();\n            }\n            else if (el.getAttribute(\"src\")) {\n                return el.getAttribute(\"src\") || \"\";\n            }\n        }\n    }\n    // Handle url() CSS function syntax\n    if (src.startsWith(\"url(\") && src.endsWith(\")\")) {\n        src = src.slice(4, -1).replace(/['\"]/g, \"\");\n    }\n    // Convert relative paths to absolute\n    if (!src.startsWith(\"http://\") &&\n        !src.startsWith(\"https://\") &&\n        !src.startsWith(\"data:\")) {\n        const basePath = window.location.pathname.substring(0, window.location.pathname.lastIndexOf(\"/\") + 1);\n        src = basePath + src;\n    }\n    return src;\n}\n/**\n * Patches Three.js WebGLRenderer to handle useLegacyLights deprecation warning\n * This is needed for compatibility with different versions of Three.js used by A-Frame\n *\n * @see {@link https://threejs.org/docs/#api/en/renderers/WebGLRenderer} Three.js WebGLRenderer\n */\nexport function patchWebGLRenderer() {\n    if (!window.AFRAME)\n        return;\n    const THREE = window.AFRAME.THREE;\n    const originalWebGLRenderer = THREE.WebGLRenderer;\n    if (originalWebGLRenderer.__patched)\n        return;\n    THREE.WebGLRenderer = function (parameters) {\n        const renderer = new originalWebGLRenderer(parameters);\n        Object.defineProperty(renderer, \"useLegacyLights\", {\n            get: () => false,\n            set: () => {\n                // Silently ignore the deprecation\n            },\n        });\n        return renderer;\n    };\n    THREE.WebGLRenderer.prototype = originalWebGLRenderer.prototype;\n    Object.setPrototypeOf(THREE.WebGLRenderer, originalWebGLRenderer);\n    THREE.WebGLRenderer.__patched = true;\n}\n","/**\n * A-Frame GIF Shader and Component\n *\n * A TypeScript implementation for displaying animated GIFs in A-Frame scenes.\n * Combines both shader and component functionalities in a single package.\n *\n * @see {@link https://aframe.io/docs/1.7.0/introduction/} A-Frame Documentation\n * @version 1.0.0\n * @license MIT\n */\nimport { registerGifComponent } from \"./component\";\nimport { registerGifShader } from \"./shader\";\nimport { patchWebGLRenderer } from \"./utils\";\n// Initialize WebGL renderer with required patches\npatchWebGLRenderer();\n// Register A-Frame components\nregisterGifShader();\nregisterGifComponent();\n","/**\n * A-Frame GIF Shader Implementation\n * Custom shader for rendering animated GIFs in A-Frame\n * @see {@link https://aframe.io/docs/1.7.0/components/material.html#registering-a-custom-shader} Custom Shader\n * @see {@link https://threejs.org/docs/#api/en/materials/ShaderMaterial} Three.js ShaderMaterial\n */\nimport { GifLoader } from \"./gif-loader\";\nimport { resolveUrl } from \"./utils\";\n/**\n * Registers the GIF shader with A-Frame\n */\nexport function registerGifShader() {\n    const THREE = window.AFRAME.THREE;\n    window.AFRAME.registerComponent(\"gif-shader\", {\n        /**\n         * Shader property schema\n         * @see {@link https://aframe.io/docs/1.7.0/core/component.html#schema} Schema Documentation\n         */\n        schema: {\n            color: { type: \"color\" },\n            fog: { default: true },\n            src: { default: null },\n            autoplay: { default: true },\n            opacity: { type: \"number\", default: 1.0 },\n            alphaTest: { type: \"number\", default: 0.0 },\n            repeat: { type: \"vec2\", default: { x: 1, y: 1 } },\n            depthTest: { default: true },\n            depthWrite: { default: true },\n            transparent: { default: true },\n        },\n        /**\n         * Initialize shader component\n         * Sets up canvases, textures, and material\n         */\n        init: function () {\n            // Initialize main canvas and context\n            this.__cnv = document.createElement(\"canvas\");\n            this.__cnv.width = 2;\n            this.__cnv.height = 2;\n            this.__ctx = this.__cnv.getContext(\"2d\", { willReadFrequently: true });\n            this.__texture = new THREE.Texture(this.__cnv);\n            // Configure texture parameters\n            this.__texture.minFilter = THREE.LinearFilter;\n            this.__texture.magFilter = THREE.LinearFilter;\n            this.__texture.generateMipmaps = false;\n            this.__texture.colorSpace = THREE.SRGBColorSpace;\n            this.__texture.wrapS = THREE.RepeatWrapping;\n            this.__texture.wrapT = THREE.RepeatWrapping;\n            this.__texture.premultiplyAlpha = true;\n            this.__texture.flipY = true;\n            this.__texture.format = THREE.RGBAFormat;\n            // Initialize animation state\n            this.__frameIdx = 0;\n            this.__frameCnt = 0;\n            this.__delayTimes = null;\n            this.__frames = null;\n            this.__autoplay = this.data.autoplay !== false;\n            this.__paused = !this.__autoplay;\n            this.__textureSrc = null;\n            this.__startTime = 0;\n            this.__nextFrameTime = 0;\n            // Create offscreen canvas for frame composition\n            this.__offscreenCanvas = document.createElement(\"canvas\");\n            this.__offscreenCanvas.width = 2;\n            this.__offscreenCanvas.height = 2;\n            this.__offscreenCtx = this.__offscreenCanvas.getContext(\"2d\", {\n                willReadFrequently: true,\n            });\n            // Create Three.js material\n            this.material = new THREE.MeshBasicMaterial({\n                map: this.__texture,\n                transparent: true,\n                side: THREE.DoubleSide,\n                fog: this.data.fog,\n                opacity: 1.0,\n                alphaTest: this.data.alphaTest,\n                depthTest: this.data.depthTest,\n                depthWrite: this.data.depthWrite,\n                color: new THREE.Color(this.data.color),\n            });\n            // Set texture repeat if specified\n            if (this.data.repeat) {\n                this.__texture.repeat.set(this.data.repeat.x, this.data.repeat.y);\n            }\n            /**\n             * Apply material to entity's mesh\n             */\n            const applyMaterial = () => {\n                const mesh = this.el.getObject3D(\"mesh\");\n                if (mesh) {\n                    if (Array.isArray(mesh.material)) {\n                        mesh.material = mesh.material.map(() => this.material);\n                    }\n                    else {\n                        mesh.material = this.material;\n                    }\n                }\n            };\n            // Apply material and load GIF when entity is ready\n            if (this.el.hasLoaded) {\n                applyMaterial();\n                if (this.data.src) {\n                    this.__loadGif(this.data.src);\n                }\n            }\n            else {\n                this.el.addEventListener(\"loaded\", () => {\n                    applyMaterial();\n                    if (this.data.src) {\n                        this.__loadGif(this.data.src);\n                    }\n                });\n            }\n        },\n        /**\n         * Frame update handler\n         * Manages GIF animation timing and frame updates\n         */\n        tick: function (time, deltaTime) {\n            if (!this.__frames || !this.__delayTimes || this.__paused)\n                return;\n            // Initialize start time on first update\n            if (this.__startTime === 0) {\n                this.__startTime = time;\n                this.__nextFrameTime = time + this.__delayTimes[0];\n                return;\n            }\n            // Update frame at fixed intervals\n            if (time >= this.__nextFrameTime) {\n                this.__frameIdx = (this.__frameIdx + 1) % this.__frameCnt;\n                this.__nextFrameTime += this.__delayTimes[0];\n                // Reset timer if significantly behind\n                if (time - this.__nextFrameTime > 1000) {\n                    this.__nextFrameTime = time + this.__delayTimes[0];\n                }\n                this.__updateTexture();\n            }\n        },\n        /**\n         * Loads and processes a GIF file\n         * @param src - URL or selector for GIF image\n         */\n        __loadGif: function (src) {\n            let url = src;\n            // Extract filename from URL\n            const fileName = url.split(\"/\").pop() || url;\n            // Handle asset references\n            if (src.startsWith(\"#\")) {\n                const asset = document.querySelector(src);\n                if (asset && asset.src) {\n                    url = asset.src;\n                }\n                else {\n                    console.error(\"Asset not found:\", src);\n                    return;\n                }\n            }\n            url = resolveUrl(url);\n            if (!url) {\n                console.error(\"Invalid GIF URL:\", src);\n                return;\n            }\n            fetch(url)\n                .then((response) => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                return response.arrayBuffer();\n            })\n                .then((buffer) => {\n                const parsedGif = GifLoader.parseGIF(buffer);\n                const frames = GifLoader.decompressFrames(parsedGif);\n                // Analyze GIF timing characteristics\n                const delays = frames.map((f) => f.delay);\n                const avgDelay = delays.reduce((a, b) => a + b, 0) / delays.length;\n                const normalizedDelays = new Array(delays.length).fill(avgDelay);\n                // Set canvas dimensions to first frame size\n                const firstFrame = frames[0];\n                this.__cnv.width = firstFrame.dims.width;\n                this.__cnv.height = firstFrame.dims.height;\n                this.__offscreenCanvas.width = firstFrame.dims.width;\n                this.__offscreenCanvas.height = firstFrame.dims.height;\n                // Reapply repeat settings\n                if (this.data.repeat) {\n                    this.__texture.repeat.set(this.data.repeat.x, this.data.repeat.y);\n                }\n                this.__frames = frames;\n                this.__delayTimes = normalizedDelays;\n                this.__frameCnt = frames.length;\n                this.__frameIdx = 0;\n                this.__textureSrc = src;\n                // Update first frame immediately\n                this.__updateTexture();\n                if (this.__autoplay) {\n                    this.play();\n                }\n            })\n                .catch((error) => {\n                console.error(\"Failed to load GIF:\", error);\n                this.__reset();\n            });\n        },\n        /**\n         * Updates texture with current frame data\n         * Handles frame disposal methods according to GIF spec\n         * @see {@link http://www.w3.org/Graphics/GIF/spec-gif89a.txt} GIF89a Specification\n         */\n        __updateTexture: function () {\n            if (!this.__frames || !this.__ctx || !this.__offscreenCtx)\n                return;\n            const frame = this.__frames[this.__frameIdx];\n            if (!frame)\n                return;\n            try {\n                // Create temporary canvas for current frame\n                const frameCanvas = document.createElement(\"canvas\");\n                frameCanvas.width = frame.dims.width;\n                frameCanvas.height = frame.dims.height;\n                const frameCtx = frameCanvas.getContext(\"2d\", {\n                    willReadFrequently: true,\n                    alpha: true,\n                });\n                if (!frameCtx)\n                    return;\n                // Draw current frame to frame canvas\n                const imageData = new ImageData(frame.patch, frame.dims.width, frame.dims.height);\n                frameCtx.putImageData(imageData, 0, 0);\n                // Handle frame disposal method\n                if (frame.disposalType === 2 || this.__frameIdx === 0) {\n                    // Clear area for disposal method 2 or first frame\n                    this.__ctx.clearRect(frame.dims.left - 1, frame.dims.top - 1, frame.dims.width + 2, frame.dims.height + 2);\n                }\n                else {\n                    // Restore content from offscreen canvas for other disposal methods\n                    this.__ctx.globalCompositeOperation = \"copy\";\n                    this.__ctx.drawImage(this.__offscreenCanvas, 0, 0);\n                    this.__ctx.globalCompositeOperation = \"source-over\";\n                }\n                // Draw current frame to main canvas\n                this.__ctx.drawImage(frameCanvas, 0, 0, frame.dims.width, frame.dims.height, frame.dims.left, frame.dims.top, frame.dims.width, frame.dims.height);\n                // Update offscreen canvas\n                this.__offscreenCtx.clearRect(0, 0, this.__offscreenCanvas.width, this.__offscreenCanvas.height);\n                this.__offscreenCtx.drawImage(this.__cnv, 0, 0);\n                // Mark texture for update\n                this.__texture.needsUpdate = true;\n            }\n            catch (error) {\n                console.error(\"Error updating frame:\", error);\n            }\n        },\n        /**\n         * Resets component state\n         */\n        __reset: function () {\n            this.__frames = null;\n            this.__delayTimes = null;\n            this.__frameCnt = 0;\n            this.__frameIdx = 0;\n            this.__textureSrc = null;\n            this.__startTime = 0;\n            this.__nextFrameTime = 0;\n        },\n        /**\n         * Clears all canvases\n         */\n        __clearCanvas: function () {\n            if (this.__ctx) {\n                this.__ctx.clearRect(0, 0, this.__cnv.width, this.__cnv.height);\n            }\n            if (this.__offscreenCtx) {\n                this.__offscreenCtx.clearRect(0, 0, this.__offscreenCanvas.width, this.__offscreenCanvas.height);\n            }\n            if (this.__texture) {\n                this.__texture.needsUpdate = true;\n            }\n        },\n        /**\n         * Starts GIF animation playback\n         */\n        play: function () {\n            this.__paused = false;\n            this.__startTime = 0;\n        },\n        /**\n         * Pauses GIF animation playback\n         */\n        pause: function () {\n            this.__paused = true;\n        },\n        /**\n         * Toggles GIF animation playback state\n         */\n        togglePlayback: function () {\n            if (this.__paused) {\n                this.play();\n            }\n            else {\n                this.pause();\n            }\n        },\n    });\n}\n","/**\n * A-Frame GIF Component\n * Provides a high-level interface for displaying animated GIFs in A-Frame\n * @see {@link https://aframe.io/docs/1.7.0/core/component.html} A-Frame Component API\n */\n/**\n * Registers the GIF component with A-Frame\n * The component wraps the gif-shader for easier use\n */\nexport function registerGifComponent() {\n    window.AFRAME.registerComponent(\"gif\", {\n        /**\n         * Component schema definition\n         * @see {@link https://aframe.io/docs/1.7.0/core/component.html#schema} Schema Documentation\n         */\n        schema: {\n            src: { type: \"string\" },\n            autoplay: { default: true },\n            shader: { default: \"gif\" },\n            repeat: { type: \"vec2\", default: { x: 1, y: 1 } },\n        },\n        /**\n         * Component initialization\n         * Sets up the gif-shader with initial properties\n         */\n        init() {\n            // Initialize gif-shader component\n            this.el.setAttribute(\"gif-shader\", {\n                src: this.data.src,\n                autoplay: this.data.autoplay,\n                repeat: this.data.repeat,\n            });\n        },\n        /**\n         * Component update handler\n         * Updates gif-shader properties when component properties change\n         * @param oldData - Previous component data\n         */\n        update(oldData = {}) {\n            var _a, _b;\n            const data = this.data;\n            // Update gif-shader component properties\n            if (data.src !== oldData.src) {\n                this.el.setAttribute(\"gif-shader\", \"src\", data.src);\n            }\n            if (data.autoplay !== oldData.autoplay) {\n                this.el.setAttribute(\"gif-shader\", \"autoplay\", data.autoplay);\n            }\n            if (data.repeat &&\n                (((_a = oldData.repeat) === null || _a === void 0 ? void 0 : _a.x) !== data.repeat.x ||\n                    ((_b = oldData.repeat) === null || _b === void 0 ? void 0 : _b.y) !== data.repeat.y)) {\n                this.el.setAttribute(\"gif-shader\", \"repeat\", data.repeat);\n            }\n        },\n        /**\n         * Component cleanup\n         * Removes the gif-shader when component is removed\n         */\n        remove() {\n            this.el.removeAttribute(\"gif-shader\");\n        },\n        /**\n         * Starts GIF animation playback\n         */\n        play() {\n            const shader = this.el.components[\"gif-shader\"];\n            if (shader) {\n                shader.play();\n            }\n        },\n        /**\n         * Pauses GIF animation playback\n         */\n        pause() {\n            const shader = this.el.components[\"gif-shader\"];\n            if (shader) {\n                shader.pause();\n            }\n        },\n        /**\n         * Frame update handler\n         * Delegates animation updates to the gif-shader\n         * @param time - Current time in milliseconds\n         * @param timeDelta - Time since last frame in milliseconds\n         */\n        tick(time, timeDelta) {\n            const shader = this.el.components[\"gif-shader\"];\n            if (shader && typeof shader.tick === \"function\") {\n                shader.tick(time, timeDelta);\n            }\n        },\n    });\n}\n"],"names":["root","factory","exports","module","define","amd","this","Object","defineProperty","value","loop","conditional","parse","stream","schema","result","arguments","length","undefined","parent","Array","isArray","forEach","partSchema","key","keys","conditionFunc","continueFunc","arr","lastStreamPos","pos","newParent","push","deinterlace","pixels","width","newPixels","rows","cpRow","toRow","fromRow","fromPixels","slice","splice","apply","concat","offsets","steps","pass","lzw","minCodeSize","data","pixelCount","available","clear","code_mask","code_size","end_of_information","in_code","old_code","code","i","data_size","datum","bits","first","top","pi","bi","MAX_STACK_SIZE","npix","dstPixels","prefix","suffix","pixelStack","obj","_gif","__esModule","_jsBinarySchemaParser","_uint","_deinterlace","_lzw","arrayBuffer","byteData","Uint8Array","buildStream","parsedGif","buildImagePatches","frames","filter","f","image","map","frame","gct","buildImagePatch","totalPixels","descriptor","height","blocks","lct","interlaced","resultImage","dims","left","exists","colorTable","gce","delay","disposalType","extras","disposal","transparentColorGiven","transparentIndex","transparentColorIndex","patch","patchData","Uint8ClampedArray","colorIndex","color","generatePatch","console","warn","decompressFrame","readBits","readArray","readUnsigned","readString","peekBytes","readBytes","peekByte","readByte","uint8Data","offset","subarray","from","String","fromCharCode","join","littleEndian","bytes","byteSize","totalOrFunc","total","parser","_byte","reduce","res","def","startIndex","Math","pow","subBitsTotal","index","_","subBlocksSchema","chunks","streamSize","size","availableSize","set","gceSchema","codes","future","userInput","terminator","imageSchema","sort","textSchema","text","blockSize","preData","applicationSchema","application","id","commentSchema","comment","_default","header","signature","version","lsd","resolution","backgroundColorIndex","pixelAspectRatio","nextCode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","GifLoader","parseGIF","buffer","decompressFrames","gif","window","AFRAME","THREE","originalWebGLRenderer","WebGLRenderer","__patched","parameters","renderer","get","prototype","setPrototypeOf","patchWebGLRenderer","registerComponent","type","fog","default","src","autoplay","opacity","alphaTest","repeat","x","y","depthTest","depthWrite","transparent","init","__cnv","document","createElement","__ctx","getContext","willReadFrequently","__texture","Texture","minFilter","LinearFilter","magFilter","generateMipmaps","colorSpace","SRGBColorSpace","wrapS","RepeatWrapping","wrapT","premultiplyAlpha","flipY","format","RGBAFormat","__frameIdx","__frameCnt","__delayTimes","__frames","__autoplay","__paused","__textureSrc","__startTime","__nextFrameTime","__offscreenCanvas","__offscreenCtx","material","MeshBasicMaterial","side","DoubleSide","Color","applyMaterial","mesh","el","getObject3D","hasLoaded","__loadGif","addEventListener","tick","time","deltaTime","__updateTexture","url","split","pop","startsWith","asset","querySelector","error","HTMLImageElement","HTMLCanvasElement","toDataURL","getAttribute","endsWith","replace","location","pathname","substring","lastIndexOf","resolveUrl","fetch","then","response","ok","Error","status","delays","avgDelay","a","b","normalizedDelays","fill","firstFrame","play","catch","__reset","frameCanvas","frameCtx","alpha","imageData","ImageData","putImageData","clearRect","globalCompositeOperation","drawImage","needsUpdate","__clearCanvas","pause","togglePlayback","registerGifShader","shader","setAttribute","update","oldData","_a","_b","remove","removeAttribute","components","timeDelta"],"sourceRoot":""}